name: "XSS Scanner Workflow"

on:
  repository_dispatch:
    types: [scanner-trigger]

jobs:
  fetch-results:
    runs-on: ubuntu-latest
    outputs:
      urls_exist: ${{ steps.check_files.outputs.urls_exist }}
    steps:
      - name: Setup SSH and Git
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Clone storage repo and copy files
        run: |
          git clone "${{ github.event.client_payload.storage_repo }}" storage
          mkdir -p combined-results
          cp storage/"${{ github.event.client_payload.target_name }}"/* combined-results/ 2>/dev/null || echo "No files to copy"

      - name: Check if URLs exist
        id: check_files
        run: |
          if [[ -s "combined-results/live-urls.txt" ]]; then
            echo "urls_exist=true" >> $GITHUB_OUTPUT
          else
            echo "urls_exist=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload combined-results artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined-results
          path: combined-results/

  x8-scan:
    needs: fetch-results
    # run only if run_x8 is true AND we actually have URLs
    if: ${{ github.event.client_payload.run_x8 && needs.fetch-results.outputs.urls_exist == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [1,2,3,4,5,6,7,8,9,10]
    steps:
      - name: Download combined-results
        uses: actions/download-artifact@v4
        with:
          name: combined-results
          path: artifacts/

      - name: Install x8
        run: |
          wget https://github.com/Sh1Yo/x8/releases/latest/download/x8-linux-x86_64 -O x8
          chmod +x x8
          sudo mv x8 /usr/local/bin/

      - name: Run x8
        env:
          CUSTOM_COOKIE: ${{ github.event.client_payload.custom_cookie }}
          CUSTOM_HEADER: ${{ github.event.client_payload.custom_header }}
        run: |
          # build header arguments
          hdr_args=()
          if [[ -n "$CUSTOM_COOKIE" ]]; then
            hdr_args+=(-H "Cookie: $CUSTOM_COOKIE")
          fi
          if [[ -n "$CUSTOM_HEADER" ]]; then
            hdr_args+=(-H "$CUSTOM_HEADER")
          fi

          mkdir -p x8-results-${{ matrix.chunk }}
          total=$(wc -l < artifacts/live-urls.txt)
          per_chunk=$(( (total + 10 - 1) / 10 ))
          start=$(( (${{ matrix.chunk }} - 1) * per_chunk + 1 ))
          end=$(( ${{ matrix.chunk }} * per_chunk ))

          sed -n "${start},${end}p" artifacts/live-urls.txt | \
            xargs -I {} -P 4 bash -c 'x8 -u "$1" "${hdr_args[@]}" -w artifacts/params.txt' _ {} \
            > x8-results-${{ matrix.chunk }}/x8.txt

      - name: Upload x8 results
        uses: actions/upload-artifact@v4
        with:
          name: x8-results-chunk-${{ matrix.chunk }}
          path: x8-results-${{ matrix.chunk }}/

  kxss-scan:
    needs: fetch-results
    if: ${{ github.event.client_payload.run_kxss && needs.fetch-results.outputs.urls_exist == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [1,2,3,4,5,6,7,8,9,10]
    steps:
      - name: Download combined-results
        uses: actions/download-artifact@v4
        with:
          name: combined-results
          path: artifacts/

      - name: Install kxss
        run: |
          go install github.com/Emoe/kxss@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Run kxss
        env:
          CUSTOM_COOKIE: ${{ github.event.client_payload.custom_cookie }}
          CUSTOM_HEADER: ${{ github.event.client_payload.custom_header }}
        run: |
          # build header args
          hdr_args=()
          if [[ -n "$CUSTOM_COOKIE" ]]; then
            hdr_args+=(-header "Cookie: $CUSTOM_COOKIE")
          fi
          if [[ -n "$CUSTOM_HEADER" ]]; then
            hdr_args+=(-header "$CUSTOM_HEADER")
          fi

          mkdir -p kxss-results-${{ matrix.chunk }}
          total=$(wc -l < artifacts/live-urls.txt)
          per_chunk=$(( (total + 10 - 1) / 10 ))
          start=$(( (${{ matrix.chunk }} - 1) * per_chunk + 1 ))
          end=$(( ${{ matrix.chunk }} * per_chunk ))

          sed -n "${start},${end}p" artifacts/live-urls.txt > chunk.txt
          if [[ -f artifacts/params.txt ]]; then
            while read -r url; do
              while read -r param; do
                if [[ "$url" == *\?* ]]; then
                  echo "${url}&${param}=KXSS"
                else
                  echo "${url}?${param}=KXSS"
                fi
              done < artifacts/params.txt
            done < chunk.txt | sort -u | xargs -P 4 kxss "${hdr_args[@]}" \
              > kxss-results-${{ matrix.chunk }}/kxss.txt
          else
            xargs -a chunk.txt -P 4 kxss "${hdr_args[@]}" \
              > kxss-results-${{ matrix.chunk }}/kxss.txt
          fi

      - name: Upload kxss results
        uses: actions/upload-artifact@v4
        with:
          name: kxss-results-chunk-${{ matrix.chunk }}
          path: kxss-results-${{ matrix.chunk }}/

  push-to-storage:
    needs: [x8-scan, kxss-scan]
    if: always()   # commit even if scans fail or are skipped
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH and Git
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Download all scan results
        uses: actions/download-artifact@v4
        with:
          path: all-results

      - name: Push results to storage repo
        run: |
          git clone "${{ github.event.client_payload.storage_repo }}" storage
          mkdir -p storage/"${{ github.event.client_payload.target_name }}"/xss

          # merge x8 if it ran
          if [ -d all-results/x8-results-chunk-1 ]; then
            find all-results -type f -name "x8.txt" -exec cat {} + \
              > storage/"${{ github.event.client_payload.target_name }}"/xss/x8.txt
          fi

          # merge kxss if it ran
          if [ -d all-results/kxss-results-chunk-1 ]; then
            find all-results -type f -name "kxss.txt" -exec cat {} + \
              > storage/"${{ github.event.client_payload.target_name }}"/xss/kxss.txt
          fi

          cd storage
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "Update XSS for ${{ github.event.client_payload.target_name }}"
            git push
          else
            echo "No changes to commit"
          fi
