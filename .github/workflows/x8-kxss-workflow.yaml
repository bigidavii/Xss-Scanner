name: "XSS Scanner Workflow"

on:
  repository_dispatch:
    types: [scanner-trigger]

jobs:
  fetch-results:
    runs-on: ubuntu-latest
    outputs:
      urls_exist: ${{ steps.check_files.outputs.urls_exist }}
    steps:
      - name: Setup SSH and Git
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "${DEPLOY_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Clone storage repo and copy files
        run: |
          git clone ${{ github.event.client_payload.storage_repo }} storage
          mkdir -p combined-results
          # Copy all files from the target directory, which should include live-urls.txt and params.txt
          cp storage/${{ github.event.client_payload.target_name }}/* combined-results/ 2>/dev/null || echo "No files to copy"
      - name: Check if URLs exist
        id: check_files
        run: |
          if [[ -s "combined-results/live-urls.txt" ]]; then
            echo "urls_exist=true" >> $GITHUB_OUTPUT
          else
            echo "urls_exist=false" >> $GITHUB_OUTPUT
          fi
      - name: Upload combined-results artifact
        uses: actions/upload-artifact@v4
        with:
          name: combined-results
          path: combined-results/

  x8-scan:
    needs: fetch-results
    if: "github.event.client_payload.run_x8 == 'true' && needs.fetch-results.outputs.urls_exist == 'true'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: combined-results
          path: artifacts/
      - name: Install x8
        run: |
          wget https://github.com/Sh1Yo/x8/releases/latest/download/x8-linux-x86_64 -O x8
          chmod +x x8 && sudo mv x8 /usr/local/bin/
      - name: Run x8
        env:
          CUSTOM_COOKIE: ${{ github.event.client_payload.custom_cookie }}
          CUSTOM_HEADER: ${{ github.event.client_payload.custom_header }}
        run: |
          HEADER_ARGS=""
          if [[ -n "$CUSTOM_COOKIE" ]]; then
            HEADER_ARGS="$HEADER_ARGS -H 'Cookie: $CUSTOM_COOKIE'"
          fi
          if [[ -n "$CUSTOM_HEADER" ]]; then
            HEADER_ARGS="$HEADER_ARGS -H '$CUSTOM_HEADER'"
          fi

          PARAMS_FILE="artifacts/params.txt"
          PARAMS_ARG=""
          if [[ -f "$PARAMS_FILE" ]]; then
            PARAMS_ARG="-w $PARAMS_FILE"
          fi

          mkdir -p x8-results-${{ matrix.chunk }}
          TOTAL=$(wc -l < artifacts/live-urls.txt)
          LINES=$(( (TOTAL + 10 - 1) / 10 ))
          START=$((((${{ matrix.chunk }} - 1) * LINES) + 1))
          END=$((${{ matrix.chunk }} * LINES))
          sed -n "${START},${END}p" artifacts/live-urls.txt | \
            while read -r url; do
              eval "unbuffer x8 -u '$url' $PARAMS_ARG $HEADER_ARGS"
            done > x8-results-${{ matrix.chunk }}/x8.txt
      - name: Upload x8 results
        uses: actions/upload-artifact@v4
        with:
          name: x8-results-chunk-${{ matrix.chunk }}
          path: x8-results-${{ matrix.chunk }}/

  kxss-scan:
    needs: fetch-results
    if: "github.event.client_payload.run_kxss == 'true' && needs.fetch-results.outputs.urls_exist == 'true'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: combined-results
          path: artifacts/
      - name: Install kxss
        run: |
          go install github.com/Emoe/kxss@latest
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
      - name: Run kxss
        env:
          CUSTOM_COOKIE: ${{ github.event.client_payload.custom_cookie }}
          CUSTOM_HEADER: ${{ github.event.client_payload.custom_header }}
        run: |
          HEADER_ARGS=""
          if [[ -n "$CUSTOM_COOKIE" ]]; then
            HEADER_ARGS="$HEADER_ARGS -header 'Cookie: $CUSTOM_COOKIE'"
          fi
          if [[ -n "$CUSTOM_HEADER" ]]; then
            HEADER_ARGS="$HEADER_ARGS -header '$CUSTOM_HEADER'"
          fi

          mkdir -p kxss-results-${{ matrix.chunk }}
          TOTAL=$(wc -l < artifacts/live-urls.txt)
          LINES=$(( (TOTAL + 10 - 1) / 10 ))
          START=$((((${{ matrix.chunk }} - 1) * LINES) + 1))
          END=$((${{ matrix.chunk }} * LINES))

          URL_CHUNK=$(mktemp)
          sed -n "${START},${END}p" artifacts/live-urls.txt > $URL_CHUNK

          PARAMS_FILE="artifacts/params.txt"
          if [[ -f "$PARAMS_FILE" ]]; then
            while read -r url; do
              while read -r param; do
                if [[ "$url" == *"?"* ]]; then
                  echo "${url}&${param}=KXSS"
                else
                  echo "${url}?${param}=KXSS"
                fi
              done < "$PARAMS_FILE"
            done < "$URL_CHUNK" | sort -u | eval "kxss $HEADER_ARGS" > kxss-results-${{ matrix.chunk }}/kxss.txt
          else
            cat $URL_CHUNK | eval "kxss $HEADER_ARGS" > kxss-results-${{ matrix.chunk }}/kxss.txt
          fi

      - name: Upload kxss results
        uses: actions/upload-artifact@v4
        with:
          name: kxss-results-chunk-${{ matrix.chunk }}
          path: kxss-results-${{ matrix.chunk }}/

  push-to-storage:
    needs: [x8-scan, kxss-scan]
    if: always() # Always run this job to commit results, even if one scan fails or is skipped
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH and Git
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          mkdir -p ~/.ssh/
          echo "${DEPLOY_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
      - name: Download all scan results
        uses: actions/download-artifact@v4
        with:
          path: all-results
      - name: Push results to storage repo
        run: |
          git clone ${{ github.event.client_payload.storage_repo }} storage
          mkdir -p storage/${{ github.event.client_payload.target_name }}/xss

          X8_FILE="storage/${{ github.event.client_payload.target_name }}/xss/x8.txt"
          KXSS_FILE="storage/${{ github.event.client_payload.target_name }}/xss/kxss.txt"

          # Consolidate x8 results if the job ran
          if [[ -d "all-results/x8-results-chunk-1" ]]; then
            find all-results -type f -name "x8.txt" -exec cat {} + > "$X8_FILE"
          fi

          # Consolidate kxss results if the job ran
          if [[ -d "all-results/kxss-results-chunk-1" ]]; then
            find all-results -type f -name "kxss.txt" -exec cat {} + > "$KXSS_FILE"
          fi

          cd storage
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Update XSS results for ${{ github.event.client_payload.target_name }}"
            git push
          else
            echo "No changes to commit"
          fi
